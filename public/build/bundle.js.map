{"version":3,"file":"bundle.js","sources":["../../src/domini/component/MComponent.ts","../../src/domini/data/Vector2.ts","../../src/domini/util/ElementUtils.ts","../../src/domini/element/MVertex.ts","../../src/domini/element/MEntity.ts","../../src/domini/util/MathUtils.ts","../../src/domini/Domini.ts","../../src/domini/data/Input.ts","../../src/app/component/Bullet.ts","../../src/app/component/Gun.ts","../../src/app/component/Player.ts","../../src/app/component/Enemy.ts","../../node_modules/svelte/internal/index.mjs","../../src/app/View.svelte","../../src/app/Game.ts","../../src/main.ts"],"sourcesContent":["export default class MComponent {\r\n    constructor(entity) {\r\n        this.isStart = false;\r\n        this.entity = entity;\r\n    }\r\n    static getClass(name) { return MComponent.nameToComp.get(name); }\r\n    ;\r\n    static registerComponent(name, compClass) {\r\n        this.nameToComp.set(name, compClass);\r\n    }\r\n    static generateComponent(className) {\r\n        const factory = MComponent.nameToComp.get(className);\r\n        if (factory) {\r\n            return new factory();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    }\r\n    static getAttributeName(compClass) {\r\n        for (const e of this.nameToComp.entries()) {\r\n            if (e[1] == compClass) {\r\n                return e[0];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    start() {\r\n    }\r\n    update() {\r\n    }\r\n    onDestroy() {\r\n    }\r\n}\r\nMComponent.nameToComp = new Map();\r\n","export default class Vector2 {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    addVectors(v) {\r\n        return new Vector2(this.x + v.x, this.y + v.y);\r\n    }\r\n    multiply(v) {\r\n        return new Vector2(this.x * v, this.y * v);\r\n    }\r\n    get normalized() {\r\n        return this.multiply(1 / this.distance);\r\n    }\r\n    get distance() {\r\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\r\n    }\r\n    getDistance(pos) {\r\n        return Math.sqrt(Math.pow(this.x - pos.x, 2) + Math.pow(this.y - pos.y, 2));\r\n    }\r\n    static cross(va, vb) {\r\n        return va.x * vb.y - va.y * vb.x;\r\n    }\r\n    static isCrossXY(aFrom, aTo, bFrom, bTo) {\r\n        const ta = (bFrom.x - bTo.x) * (aFrom.y - bFrom.y) + (bFrom.y - bTo.y) * (bFrom.x - aFrom.x);\r\n        const tb = (bFrom.x - bTo.x) * (aTo.y - bFrom.y) + (bFrom.y - bTo.y) * (bFrom.x - aTo.x);\r\n        const tc = (aFrom.x - aTo.x) * (bFrom.y - aFrom.y) + (aFrom.y - aTo.y) * (aFrom.x - bFrom.x);\r\n        const td = (aFrom.x - aTo.x) * (bTo.y - aFrom.y) + (aFrom.y - aTo.y) * (aFrom.x - bTo.x);\r\n        return tc * td < 0 && ta * tb < 0;\r\n    }\r\n}\r\n","export default class ElementUtils {\r\n    static destoyRecursive(ele) {\r\n        for (let e of ele.children) {\r\n            ElementUtils.destoyRecursive(e);\r\n        }\r\n        ele.remove();\r\n    }\r\n}\r\n","import Vector2 from \"../data/Vector2\";\r\nexport default class Vertex extends HTMLElement {\r\n    static new(trans, type) {\r\n        const node = document.createElement('m-vertex');\r\n        trans.appendChild(node);\r\n        const style = node.style;\r\n        style.position = \"absolute\";\r\n        style.width = \"0px\";\r\n        style.height = \"0px\";\r\n        switch (type) {\r\n            case Vertex.TYPE_LT:\r\n                break;\r\n            case Vertex.TYPE_RT:\r\n                style.left = \"100%\";\r\n                break;\r\n            case Vertex.TYPE_RB:\r\n                style.top = \"100%\";\r\n                style.left = \"100%\";\r\n                break;\r\n            case Vertex.TYPE_LB:\r\n                style.top = \"100%\";\r\n                break;\r\n        }\r\n        return node;\r\n    }\r\n    get positionScreen() {\r\n        const bound = this.getBoundingClientRect();\r\n        return new Vector2(bound.x, bound.y);\r\n    }\r\n}\r\nVertex.TYPE_LT = 0;\r\nVertex.TYPE_RT = 1;\r\nVertex.TYPE_RB = 2;\r\nVertex.TYPE_LB = 3;\r\ncustomElements.define(\"m-vertex\", Vertex);\r\n","import MComponent from \"../component/MComponent\";\r\nimport Vector2 from \"../data/Vector2\";\r\nimport ElementUtils from \"../util/ElementUtils\";\r\nimport MathUtils from \"../util/MathUtils\";\r\nimport Vertex from \"./MVertex\";\r\nimport MVertex from \"./MVertex\";\r\nexport default class MEntity extends HTMLElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.vertices = [];\r\n        this.nameToComponent = new Map();\r\n        this.collides = [];\r\n        this.notCollides = [];\r\n        this.bufferVertexPos = [];\r\n        this.bufferPositionScreen = new Vector2(0, 0);\r\n        this.bufferRadius = 0;\r\n    }\r\n    static generate() {\r\n        const node = document.createElement('m-entity');\r\n        document.body.appendChild(node);\r\n        node.initializeIfNotYet();\r\n        return node;\r\n    }\r\n    static update() {\r\n        MEntity.calcCollides();\r\n        for (const e of this.list) {\r\n            if (e.isDestroy == false) {\r\n                e.update();\r\n            }\r\n            else {\r\n                e.onDestroy();\r\n            }\r\n        }\r\n    }\r\n    static calcCollides() {\r\n        for (const e of MEntity.list) {\r\n            e.collides = [];\r\n            e.notCollides = [];\r\n            e.computeBuffer();\r\n        }\r\n        for (const e of MEntity.list) {\r\n            e.calcCollides();\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this.initializeIfNotYet();\r\n    }\r\n    initializeIfNotYet() {\r\n        if (MEntity.list.includes(this) == false) {\r\n            MEntity.list.push(this);\r\n            this.vertices = [\r\n                MVertex.new(this, MVertex.TYPE_LT),\r\n                MVertex.new(this, MVertex.TYPE_RT),\r\n                MVertex.new(this, MVertex.TYPE_RB),\r\n                MVertex.new(this, MVertex.TYPE_LB),\r\n            ];\r\n            const style = this.style;\r\n            const computeStyle = getComputedStyle(this, null);\r\n            if (style.getPropertyValue(\"--x\") == \"\") {\r\n                this.x = 0;\r\n            }\r\n            if (style.getPropertyValue(\"--y\") == \"\") {\r\n                this.y = 0;\r\n            }\r\n            if (style.getPropertyValue(\"--rad\") == \"\") {\r\n                this.rad = 0;\r\n            }\r\n            if (style.getPropertyValue(\"--sx\") == \"\") {\r\n                this.sx = 1;\r\n            }\r\n            if (style.getPropertyValue(\"--sy\") == \"\") {\r\n                this.sy = 1;\r\n            }\r\n            const w = style.getPropertyValue(\"--w\").replace(\"px\", \"\");\r\n            this.w = w ? Number(w) : Number(computeStyle.width.replace(\"px\", \"\"));\r\n            const h = style.getPropertyValue(\"--h\").replace(\"px\", \"\");\r\n            this.h = h ? Number(h) : Number(computeStyle.height.replace(\"px\", \"\"));\r\n        }\r\n    }\r\n    update() {\r\n        const nameToComp = new Map(this.nameToComponent);\r\n        const attrs = [...this.attributes];\r\n        for (const attr of attrs) {\r\n            let comp = nameToComp.get(attr.name);\r\n            if (comp) {\r\n                nameToComp.delete(attr.name);\r\n            }\r\n            else {\r\n                const compClass = MComponent.getClass(attr.name);\r\n                if (compClass) {\r\n                    comp = this.addComponent(compClass);\r\n                    if (comp) {\r\n                        comp.entity = this;\r\n                        this.nameToComponent.set(attr.name, comp);\r\n                    }\r\n                }\r\n            }\r\n            if (comp) {\r\n                if (comp.isStart == false) {\r\n                    comp.start();\r\n                    comp.isStart = true;\r\n                }\r\n                comp.update();\r\n            }\r\n        }\r\n        for (const comp of nameToComp.values()) {\r\n            comp.onDestroy();\r\n        }\r\n    }\r\n    onDestroy() {\r\n        for (const comp of this.nameToComponent.values()) {\r\n            comp.onDestroy();\r\n        }\r\n    }\r\n    get x() {\r\n        const x = this.style.getPropertyValue(\"--x\");\r\n        return x ? Number(x.replace(\"px\", \"\")) : 0;\r\n    }\r\n    set x(x) {\r\n        this.style.setProperty(\"--x\", `${x}px`);\r\n    }\r\n    get y() {\r\n        const y = this.style.getPropertyValue(\"--y\");\r\n        return y ? Number(y.replace(\"px\", \"\")) : 0;\r\n    }\r\n    set y(y) {\r\n        this.style.setProperty(\"--y\", `${y}px`);\r\n    }\r\n    get rad() {\r\n        const r = this.style.getPropertyValue(\"--rad\");\r\n        return r ? Number(r.replace(\"rad\", \"\")) : 0;\r\n    }\r\n    set rad(r) {\r\n        this.style.setProperty(\"--rad\", `${r}rad`);\r\n    }\r\n    get sx() {\r\n        const sx = this.style.getPropertyValue(\"--sx\");\r\n        return sx ? Number(sx) : 1;\r\n    }\r\n    set sx(sx) {\r\n        this.style.setProperty(\"--sx\", `${sx}`);\r\n    }\r\n    get sy() {\r\n        const sy = this.style.getPropertyValue(\"--sy\");\r\n        return sy ? Number(sy) : 1;\r\n    }\r\n    set sy(sy) {\r\n        this.style.setProperty(\"--sy\", `${sy}`);\r\n    }\r\n    get w() {\r\n        const w = this.style.getPropertyValue(\"--w\");\r\n        return w ? Number(w.replace(\"px\", \"\")) : 1;\r\n    }\r\n    set w(w) {\r\n        this.style.setProperty(\"--w\", `${w}px`);\r\n    }\r\n    get h() {\r\n        const h = this.style.getPropertyValue(\"--h\");\r\n        return h ? Number(h.replace(\"px\", \"\")) : 1;\r\n    }\r\n    set h(h) {\r\n        this.style.setProperty(\"--h\", `${h}px`);\r\n    }\r\n    get bg() {\r\n        const bg = this.style.getPropertyValue(\"--bg\");\r\n        return bg ? bg : \"black\";\r\n    }\r\n    set bg(bg) {\r\n        this.style.setProperty(\"--bg\", bg);\r\n    }\r\n    get position() {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n    set position(v) {\r\n        this.x = v.x;\r\n        this.y = v.y;\r\n    }\r\n    get scale() {\r\n        return new Vector2(this.sx, this.sy);\r\n    }\r\n    set scale(v) {\r\n        this.sx = v.x;\r\n        this.sy = v.y;\r\n    }\r\n    get parentRad() {\r\n        return this.radianScreen - this.rad;\r\n    }\r\n    get parentSx() {\r\n        return this.scaleScreenX / this.sx;\r\n    }\r\n    get parentSy() {\r\n        return this.scaleScreenY / this.sy;\r\n    }\r\n    get origin() {\r\n        return this.vertices[MVertex.TYPE_LT].positionScreen.addVectors(this.vertices[MVertex.TYPE_RB].positionScreen).multiply(0.5);\r\n    }\r\n    get top() {\r\n        return this.vertices[MVertex.TYPE_LT].positionScreen.addVectors(this.vertices[MVertex.TYPE_RT].positionScreen).multiply(0.5);\r\n    }\r\n    get bottom() {\r\n        return this.vertices[MVertex.TYPE_LB].positionScreen.addVectors(this.vertices[MVertex.TYPE_RB].positionScreen).multiply(0.5);\r\n    }\r\n    get left() {\r\n        return this.vertices[MVertex.TYPE_LT].positionScreen.addVectors(this.vertices[MVertex.TYPE_LB].positionScreen).multiply(0.5);\r\n    }\r\n    get right() {\r\n        return this.vertices[MVertex.TYPE_RT].positionScreen.addVectors(this.vertices[MVertex.TYPE_RB].positionScreen).multiply(0.5);\r\n    }\r\n    get positionScreen() {\r\n        return this.origin;\r\n    }\r\n    set positionScreen(screenPos) {\r\n        let toVector = screenPos.addVectors(this.positionScreen.multiply(-1));\r\n        this.translateScreen(toVector.x, toVector.y);\r\n    }\r\n    get radianScreen() {\r\n        const vec = this.right.addVectors(this.origin.multiply(-1));\r\n        return Math.atan2(vec.y, vec.x);\r\n    }\r\n    get degreeScreen() {\r\n        return MathUtils.radToDeg(this.radianScreen);\r\n    }\r\n    get scaleScreenX() {\r\n        const vec = this.right.addVectors(this.left.multiply(-1));\r\n        return vec.distance / this.offsetWidth;\r\n    }\r\n    get scaleScreenY() {\r\n        const vec = this.bottom.addVectors(this.top.multiply(-1));\r\n        return vec.distance / this.offsetHeight;\r\n    }\r\n    translateScreenX(x) {\r\n        const parentRad = this.parentRad;\r\n        this.x += x * Math.cos(-parentRad) * this.parentSx;\r\n        this.y += x * Math.sin(-parentRad) * this.parentSy;\r\n    }\r\n    translateScreenY(y) {\r\n        const parentRad = this.parentRad;\r\n        this.x += -y * Math.cos(-(parentRad + Math.PI / 2)) * this.parentSx;\r\n        this.y += -y * Math.sin(-(parentRad + Math.PI / 2)) * this.parentSy;\r\n    }\r\n    translateScreen(x, y) {\r\n        const parentRad = this.parentRad;\r\n        this.x += (x * Math.cos(-parentRad) - y * Math.cos(-(parentRad + Math.PI / 2))) * this.parentSx;\r\n        this.y += (x * Math.sin(-parentRad) - y * Math.sin(-(parentRad + Math.PI / 2))) * this.parentSx;\r\n    }\r\n    computeBuffer() {\r\n        this.bufferVertexPos = [this.vertices[MVertex.TYPE_LT].positionScreen, this.vertices[MVertex.TYPE_RT].positionScreen, this.vertices[MVertex.TYPE_RB].positionScreen, this.vertices[MVertex.TYPE_LB].positionScreen];\r\n        this.bufferPositionScreen = this.positionScreen;\r\n        this.bufferRadius = this.radius;\r\n    }\r\n    ;\r\n    get radius() {\r\n        return this.origin.getDistance(this.vertices[Vertex.TYPE_RT].positionScreen);\r\n    }\r\n    get parentNode() {\r\n        return this.parentNode;\r\n    }\r\n    calcCollides() {\r\n        const selfVs = this.bufferVertexPos;\r\n        const subSVs = [selfVs[0].multiply(-1), selfVs[1].multiply(-1), selfVs[2].multiply(-1), selfVs[3].multiply(-1)];\r\n        for (const otherT of MEntity.list) {\r\n            if (otherT != this && this.collides.includes(otherT) == false && this.notCollides.includes(otherT) == false) {\r\n                const otherVs = otherT.bufferVertexPos;\r\n                const subOVs = [otherVs[0].multiply(-1), otherVs[1].multiply(-1), otherVs[2].multiply(-1), otherVs[3].multiply(-1)];\r\n                let isCollide = false;\r\n                const length = otherT.bufferPositionScreen.getDistance(this.bufferPositionScreen);\r\n                if (length < (otherT.bufferRadius + this.bufferRadius)) {\r\n                    if (Vector2.isCrossXY(selfVs[0], selfVs[1], otherVs[0], otherVs[1])\r\n                        || Vector2.isCrossXY(selfVs[0], selfVs[1], otherVs[1], otherVs[2])\r\n                        || Vector2.isCrossXY(selfVs[0], selfVs[1], otherVs[2], otherVs[3])\r\n                        || Vector2.isCrossXY(selfVs[0], selfVs[1], otherVs[3], otherVs[0])\r\n                        || Vector2.isCrossXY(selfVs[1], selfVs[2], otherVs[0], otherVs[1])\r\n                        || Vector2.isCrossXY(selfVs[1], selfVs[2], otherVs[1], otherVs[2])\r\n                        || Vector2.isCrossXY(selfVs[1], selfVs[2], otherVs[2], otherVs[3])\r\n                        || Vector2.isCrossXY(selfVs[1], selfVs[2], otherVs[3], otherVs[0])\r\n                        || Vector2.isCrossXY(selfVs[2], selfVs[3], otherVs[0], otherVs[1])\r\n                        || Vector2.isCrossXY(selfVs[2], selfVs[3], otherVs[1], otherVs[2])\r\n                        || Vector2.isCrossXY(selfVs[2], selfVs[3], otherVs[2], otherVs[3])\r\n                        || Vector2.isCrossXY(selfVs[2], selfVs[3], otherVs[3], otherVs[0])\r\n                        || Vector2.isCrossXY(selfVs[3], selfVs[0], otherVs[0], otherVs[1])\r\n                        || Vector2.isCrossXY(selfVs[3], selfVs[0], otherVs[1], otherVs[2])\r\n                        || Vector2.isCrossXY(selfVs[3], selfVs[0], otherVs[2], otherVs[3])\r\n                        || Vector2.isCrossXY(selfVs[3], selfVs[0], otherVs[3], otherVs[0])) {\r\n                        isCollide = true;\r\n                    }\r\n                    else {\r\n                        for (const subSV of subSVs) {\r\n                            const otherVA = otherVs[0].addVectors(subSV);\r\n                            const otherVB = otherVs[1].addVectors(subSV);\r\n                            const otherVC = otherVs[2].addVectors(subSV);\r\n                            const otherVD = otherVs[3].addVectors(subSV);\r\n                            const crossAB = Vector2.cross(otherVA, otherVB);\r\n                            const crossBC = Vector2.cross(otherVB, otherVC);\r\n                            const crossCD = Vector2.cross(otherVC, otherVD);\r\n                            const crossDA = Vector2.cross(otherVD, otherVA);\r\n                            if (crossAB * crossBC > 0\r\n                                && crossBC * crossCD > 0\r\n                                && crossCD * crossDA > 0\r\n                                && crossDA * crossAB > 0) {\r\n                                isCollide = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (isCollide == false) {\r\n                            for (const subOV of subOVs) {\r\n                                const selfVA = selfVs[0].addVectors(subOV);\r\n                                const selfVB = selfVs[1].addVectors(subOV);\r\n                                const selfVC = selfVs[2].addVectors(subOV);\r\n                                const selfVD = selfVs[3].addVectors(subOV);\r\n                                const crossAB = Vector2.cross(selfVA, selfVB);\r\n                                const crossBC = Vector2.cross(selfVB, selfVC);\r\n                                const crossCD = Vector2.cross(selfVC, selfVD);\r\n                                const crossDA = Vector2.cross(selfVD, selfVA);\r\n                                if (crossAB * crossBC > 0\r\n                                    && crossBC * crossCD > 0\r\n                                    && crossCD * crossDA > 0\r\n                                    && crossDA * crossAB > 0) {\r\n                                    isCollide = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    if (isCollide) {\r\n                        this.collides.push(otherT);\r\n                        otherT.collides.push(this);\r\n                    }\r\n                    else {\r\n                        this.notCollides.push(otherT);\r\n                        otherT.notCollides.push(this);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    loopAtScreen(targetPos) {\r\n        const targetVec = targetPos.addVectors(this.origin.multiply(-1));\r\n        const targetRad = Math.atan2(targetVec.y, targetVec.x);\r\n        const baseVec = this.right.addVectors(this.origin.multiply(-1));\r\n        const baseRad = Math.atan2(baseVec.y, baseVec.x);\r\n        this.rad += targetRad - baseRad;\r\n    }\r\n    addComponent(compClass) {\r\n        const attrName = MComponent.getAttributeName(compClass);\r\n        if (attrName) {\r\n            let comp = new compClass();\r\n            if (comp) {\r\n                comp.entity = this;\r\n                this.nameToComponent.set(attrName, comp);\r\n                if (this.attributes.getNamedItem(attrName) == null) {\r\n                    this.setAttribute(attrName, \"\");\r\n                }\r\n            }\r\n            return comp;\r\n        }\r\n        return undefined;\r\n    }\r\n    hasComponent(compClass) {\r\n        const attrName = MComponent.getAttributeName(compClass);\r\n        if (attrName) {\r\n            return this.nameToComponent.has(attrName);\r\n        }\r\n        return false;\r\n    }\r\n    destroy() {\r\n        ElementUtils.destoyRecursive(this);\r\n    }\r\n    get isInBody() {\r\n        const rect = document.body.getBoundingClientRect();\r\n        const pos = this.positionScreen;\r\n        return 0 < pos.x && pos.x < rect.width && 0 < pos.y && pos.y < rect.height;\r\n    }\r\n    get isDestroy() {\r\n        return this.parentElement == null;\r\n    }\r\n}\r\nMEntity.list = new Array();\r\ncustomElements.define(\"m-entity\", MEntity);\r\n","export default class MathUtils {\r\n    static degToRad(deg) {\r\n        return deg * (Math.PI / 180);\r\n    }\r\n    static radToDeg(rad) {\r\n        return rad / (Math.PI / 180);\r\n    }\r\n}\r\n","import Input from \"./data/Input\";\r\nimport MEntity from \"./element/MEntity\";\r\nexport default class Domini {\r\n    static start() {\r\n        Input.initialize();\r\n        this.loop();\r\n    }\r\n    static loop() {\r\n        Domini.currentFrame = Domini.currentFrame + 1;\r\n        const now = window.performance.now();\r\n        Domini.delta = (now - Domini.prevDate) / 1000;\r\n        Domini.prevDate = now;\r\n        MEntity.update();\r\n        Input.update();\r\n        for (const e of Domini.loops) {\r\n            e();\r\n        }\r\n        requestAnimationFrame(Domini.loop);\r\n    }\r\n    static addRequestAnimationFrame(loop) {\r\n        Domini.loops.push(loop);\r\n    }\r\n}\r\nDomini.prevDate = window.performance.now();\r\nDomini.currentFrame = 0;\r\nDomini.delta = 0;\r\nDomini.loops = [];\r\n","import Domini from \"../Domini\";\r\nimport Vector2 from \"./Vector2\";\r\nexport default class Input {\r\n    static initialize() {\r\n        document.addEventListener(\"keydown\", Input._onKeyDown);\r\n        document.addEventListener(\"keyup\", Input._onKeyUp);\r\n        document.addEventListener(\"mousemove\", Input._onMouseMove);\r\n        document.body.addEventListener(\"mousedown\", Input._onMouseDown);\r\n        document.body.addEventListener(\"mouseup\", Input._onMouseUp);\r\n        document.body.addEventListener(\"wheel\", Input._onMouseWheel);\r\n        Input.update();\r\n    }\r\n    static update() {\r\n        for (let key of Input.keyToState.keys()) {\r\n            let state = Input.keyToState.get(key);\r\n            let downFrame = Input.keyToDownFrame.get(key);\r\n            let upFrame = Input.keyToUpFrame.get(key);\r\n            if (state == 2 && downFrame && downFrame <= Domini.currentFrame - 2) {\r\n                Input.keyToState.set(key, 1);\r\n            }\r\n            else if (state == -1 && upFrame && upFrame <= Domini.currentFrame - 2) {\r\n                Input.keyToState.set(key, 0);\r\n            }\r\n        }\r\n        if (Input.wheelFrame < Domini.currentFrame - 1) {\r\n            Input.wheel = 0;\r\n        }\r\n    }\r\n    static _onKeyDown(e) {\r\n        Input.keyToDownFrame.set(e.code, Domini.currentFrame);\r\n        Input.keyToState.set(e.code, 2);\r\n    }\r\n    static _onKeyUp(e) {\r\n        Input.keyToUpFrame.set(e.code, Domini.currentFrame);\r\n        Input.keyToState.set(e.code, -1);\r\n    }\r\n    static _onMouseMove(e) {\r\n        Input.mousePosition = new Vector2(e.clientX, e.clientY);\r\n    }\r\n    static _onMouseDown(e) {\r\n        switch (e.button) {\r\n            case 0:\r\n                Input.keyToDownFrame.set(Input._MOUSE_LEFT, Domini.currentFrame);\r\n                Input.keyToState.set(Input._MOUSE_LEFT, 2);\r\n            case 1:\r\n                Input.keyToDownFrame.set(Input._MOUSE_MIDDLE, Domini.currentFrame);\r\n                Input.keyToState.set(Input._MOUSE_MIDDLE, 2);\r\n            case 2:\r\n                Input.keyToDownFrame.set(Input._MOUSE_RIGHT, Domini.currentFrame);\r\n                Input.keyToState.set(Input._MOUSE_RIGHT, 2);\r\n        }\r\n    }\r\n    static _onMouseUp(e) {\r\n        switch (e.button) {\r\n            case 0:\r\n                Input.keyToUpFrame.set(Input._MOUSE_LEFT, Domini.currentFrame);\r\n                Input.keyToState.set(Input._MOUSE_LEFT, -1);\r\n            case 1:\r\n                Input.keyToUpFrame.set(Input._MOUSE_MIDDLE, Domini.currentFrame);\r\n                Input.keyToState.set(Input._MOUSE_MIDDLE, -1);\r\n            case 2:\r\n                Input.keyToUpFrame.set(Input._MOUSE_RIGHT, Domini.currentFrame);\r\n                Input.keyToState.set(Input._MOUSE_RIGHT, -1);\r\n        }\r\n    }\r\n    static _onMouseWheel(e) {\r\n        Input.wheelFrame = Domini.currentFrame;\r\n        Input.wheel = e.deltaY;\r\n    }\r\n    static isUp(code) {\r\n        if (Input.keyToState.has(code)) {\r\n            return Input.keyToState.get(code) == -1;\r\n        }\r\n        return false;\r\n    }\r\n    static isNotPress(code) {\r\n        const v = Input.keyToState.get(code);\r\n        return v == 0 || v == -1;\r\n    }\r\n    static isDown(code) {\r\n        return Input.keyToState.get(code) == 2;\r\n    }\r\n    static isPressing(code) {\r\n        const v = Input.keyToState.get(code);\r\n        return v == 1 || v == 2;\r\n    }\r\n    static get isUpMouseLeft() {\r\n        return Input.keyToState.get(Input._MOUSE_LEFT) == -1;\r\n    }\r\n    static get isNotPressMouseLeft() {\r\n        const v = Input.keyToState.get(Input._MOUSE_LEFT);\r\n        return v == -1 || v == 0;\r\n    }\r\n    static get isDownMouseLeft() {\r\n        return Input.keyToState.get(Input._MOUSE_LEFT) == 2;\r\n    }\r\n    static get isPressingMouseLeft() {\r\n        const v = Input.keyToState.get(Input._MOUSE_LEFT);\r\n        return v == 1 || v == 2;\r\n    }\r\n    static get isUpMouseRight() {\r\n        return Input.keyToState.get(Input._MOUSE_RIGHT) == -1;\r\n    }\r\n    static get isNotPressMouseRight() {\r\n        const v = Input.keyToState.get(Input._MOUSE_RIGHT);\r\n        return v == -1 || v == 0;\r\n    }\r\n    static get isDownMouseRight() {\r\n        return Input.keyToState.get(Input._MOUSE_RIGHT) == 2;\r\n    }\r\n    static get isPressingMouseRight() {\r\n        const v = Input.keyToState.get(Input._MOUSE_RIGHT);\r\n        return v == 1 || v == 2;\r\n    }\r\n    static get isUpMouseMiddle() {\r\n        return Input.keyToState.get(Input._MOUSE_MIDDLE) == -1;\r\n    }\r\n    static get isNotPressMouseMiddle() {\r\n        const v = Input.keyToState.get(Input._MOUSE_MIDDLE);\r\n        return v == -1 || v == 0;\r\n    }\r\n    static get isDownMouseMiddle() {\r\n        return Input.keyToState.get(Input._MOUSE_MIDDLE) == 2;\r\n    }\r\n    static get isPressingMouseMiddle() {\r\n        const v = Input.keyToState.get(Input._MOUSE_MIDDLE);\r\n        return v == 1 || v == 2;\r\n    }\r\n}\r\nInput._MOUSE_LEFT = \"_MOUSE_LEFT\";\r\nInput._MOUSE_RIGHT = \"_MOUSE_RIGHT\";\r\nInput._MOUSE_MIDDLE = \"_MOUSE_MIDDLE\";\r\nInput.keyToState = new Map();\r\nInput.keyToDownFrame = new Map();\r\nInput.keyToUpFrame = new Map();\r\nInput.mousePosition = new Vector2(0, 0);\r\nInput.wheelFrame = 0;\r\nInput.wheel = 0;\r\n","import MComponent from \"../../domini/component/MComponent\";\r\nimport MEntity from \"../../domini/element/MEntity\";\r\nimport Domini from \"../../domini/Domini\";\r\nexport default class Bullet extends MComponent {\r\n    static generate(screenPos, rad) {\r\n        const node = MEntity.generate();\r\n        node.rad = rad;\r\n        node.w = 10;\r\n        node.h = 10;\r\n        node.bg = \"red\";\r\n        node.positionScreen = screenPos;\r\n        return node.addComponent(Bullet);\r\n    }\r\n    update() {\r\n        const e = this.entity;\r\n        const vecR = e.right.addVectors(e.origin.multiply(-1));\r\n        e.position = e.position.addVectors(vecR.normalized.multiply(500).multiply(Domini.delta));\r\n        if (e.isInBody == false) {\r\n            e.destroy();\r\n        }\r\n    }\r\n}\r\n","import MComponent from \"../../domini/component/MComponent\";\r\nimport Input from \"../../domini/data/Input\";\r\nimport Domini from \"../../domini/Domini\";\r\nimport Bullet from \"./Bullet\";\r\nexport default class Gun extends MComponent {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.interval = 0;\r\n    }\r\n    update() {\r\n        if (this.interval > 0) {\r\n            this.interval -= Domini.delta;\r\n        }\r\n        if (Input.isDownMouseLeft) {\r\n            if (this.interval <= 0) {\r\n                const pos = this.entity.positionScreen;\r\n                const rad = this.entity.radianScreen;\r\n                Bullet.generate(pos, rad);\r\n                this.interval = Gun.SPAN;\r\n            }\r\n        }\r\n    }\r\n}\r\nGun.SPAN = 0.4;\r\n","import MComponent from \"../../domini/component/MComponent\";\r\nimport Input from \"../../domini/data/Input\";\r\nimport Vector2 from \"../../domini/data/Vector2\";\r\nimport MEntity from \"../../domini/element/MEntity\";\r\nimport Domini from \"../../domini/Domini\";\r\nimport Game from \"../Game\";\r\nimport Enemy from \"./Enemy\";\r\nimport Gun from \"./Gun\";\r\nexport default class Player extends MComponent {\r\n    static generate() {\r\n        const node = MEntity.generate();\r\n        const wScreen = document.body.offsetWidth;\r\n        const hScreen = document.body.offsetHeight;\r\n        node.w = 50;\r\n        node.h = 50;\r\n        node.positionScreen = new Vector2(wScreen / 2, hScreen / 2);\r\n        Player.instance = node.addComponent(Player);\r\n        const gun = MEntity.generate();\r\n        node.appendChild(gun);\r\n        gun.w = 25;\r\n        gun.h = 25;\r\n        gun.x = 37.5;\r\n        gun.y = 12.5;\r\n        gun.addComponent(Gun);\r\n    }\r\n    update() {\r\n        const d = Domini.delta;\r\n        const e = this.entity;\r\n        if (Input.isPressing(\"KeyW\")) {\r\n            e.translateScreenY(-d * 500);\r\n        }\r\n        if (Input.isPressing(\"KeyA\")) {\r\n            e.translateScreenX(-d * 500);\r\n        }\r\n        if (Input.isPressing(\"KeyS\")) {\r\n            e.translateScreenY(d * 500);\r\n        }\r\n        if (Input.isPressing(\"KeyD\")) {\r\n            e.translateScreenX(d * 500);\r\n        }\r\n        e.loopAtScreen(Input.mousePosition);\r\n        const wScreen = document.body.offsetWidth;\r\n        const hScreen = document.body.offsetHeight;\r\n        const pos = e.positionScreen;\r\n        let isOut = false;\r\n        if (pos.x < 0) {\r\n            pos.x = 0;\r\n            isOut = true;\r\n        }\r\n        else if (pos.x > wScreen) {\r\n            pos.x = wScreen;\r\n            isOut = true;\r\n        }\r\n        if (pos.y < 0) {\r\n            pos.y = 0;\r\n            isOut = true;\r\n        }\r\n        else if (pos.y > hScreen) {\r\n            pos.y = hScreen;\r\n            isOut = true;\r\n        }\r\n        if (isOut) {\r\n            e.positionScreen = pos;\r\n        }\r\n        const enemyAttr = MComponent.getAttributeName(Enemy);\r\n        if (enemyAttr && e.collides.some(e => e.attributes.getNamedItem(enemyAttr))) {\r\n            e.destroy();\r\n            Game.toEndingState();\r\n        }\r\n    }\r\n}\r\nPlayer.instance = undefined;\r\n","import MComponent from \"../../domini/component/MComponent\";\r\nimport Vector2 from \"../../domini/data/Vector2\";\r\nimport MEntity from \"../../domini/element/MEntity\";\r\nimport Domini from \"../../domini/Domini\";\r\nimport Game from \"../Game\";\r\nimport Bullet from \"./Bullet\";\r\nimport Player from \"./Player\";\r\nexport default class Enemy extends MComponent {\r\n    static generate() {\r\n        const node = MEntity.generate();\r\n        let pos = null;\r\n        const wScreen = document.body.clientWidth;\r\n        const hScreen = document.body.clientHeight;\r\n        if (Math.random() > 0.5) {\r\n            if (Math.random() > 0.75) {\r\n                pos = new Vector2(-Enemy.WIDTH, Math.random() * hScreen);\r\n            }\r\n            else {\r\n                pos = new Vector2(wScreen + Enemy.WIDTH, Math.random() * hScreen);\r\n            }\r\n        }\r\n        else {\r\n            if (Math.random() > 0.25) {\r\n                pos = new Vector2(Math.random() * wScreen, -Enemy.HEIGHT);\r\n            }\r\n            else {\r\n                pos = new Vector2(Math.random() * wScreen, hScreen + Enemy.WIDTH);\r\n            }\r\n        }\r\n        node.w = Enemy.WIDTH;\r\n        node.h = Enemy.HEIGHT;\r\n        node.positionScreen = pos;\r\n        node.bg = \"blue\";\r\n        return node.addComponent(Enemy);\r\n    }\r\n    static destroyAll() {\r\n        for (const e of MEntity.list) {\r\n            if (e.hasComponent(Enemy)) {\r\n                e.destroy();\r\n            }\r\n        }\r\n    }\r\n    update() {\r\n        const player = Player.instance;\r\n        const e = this.entity;\r\n        if (player) {\r\n            if (player.entity.isDestroy == false) {\r\n                this.entity.loopAtScreen(player.entity.positionScreen);\r\n                const vecR = e.right.addVectors(e.origin.multiply(-1));\r\n                e.position = e.position.addVectors(vecR.normalized.multiply(50).multiply(Domini.delta));\r\n            }\r\n        }\r\n        const bulletAttr = MComponent.getAttributeName(Bullet);\r\n        if (bulletAttr) {\r\n            const bullet = e.collides.find(e => e.attributes.getNamedItem(bulletAttr));\r\n            if (bullet) {\r\n                Game.score += 1;\r\n                bullet.destroy();\r\n                e.destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\nEnemy.WIDTH = 100;\r\nEnemy.HEIGHT = 100;\r\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport Game from \"./Game\";\n\n\texport const reload = () => {\n\t\tGame.score = Game.score;\n\t};\n\n\tonMount(() => {});\n</script>\n\n<div>\n\t<h1>DOM Shooting Game</h1>\n\t<p>\n\t\tスコア: {Game.score}\n\t</p>\n\t<p>\n\t\tWASD : 移動<br />\n\t\tマウス移動 : 回転<br />\n\t\t左クリック : 弾発射<br />\n\t</p>\n\t<p>\n\t\t<b>\n\t\t\t{#if Game.isStateWaiting}\n\t\t\t\tスペース: ゲーム開始\n\t\t\t{:else if Game.isStatePlaying}\n\t\t\t\t敵を撃て！\n\t\t\t{:else}\n\t\t\t\tスペース：最初から\n\t\t\t{/if}\n\t\t</b>\n\t</p>\n\t<p>\n\t\t<a href=\"/\">ミニゲー</a>\n\t</p>\n</div>\n\n<style lang=\"scss\">\n\t:global(body) {\n\t\toverflow: hidden;\n\t\tuser-select: none;\n\t}\n\t:global(m-entity) {\n\t\ttransform: translate(var(--x, 0), var(--y, 0)) rotate(var(--rad, 0))\n\t\t\tscaleX(var(--sx, 1)) scaleY(var(--sy, 1));\n\t\tposition: absolute;\n\t\ttransform-origin: center;\n\t\twidth: var(--w, 320px);\n\t\theight: var(--h, 256px);\n\t\tbackground-color: var(--bg, black);\n\t}\n</style>\n","import MComponent from \"../domini/component/MComponent\";\r\nimport Input from \"../domini/data/Input\";\r\nimport Domini from \"../domini/Domini\";\r\nimport Bullet from \"./component/Bullet\";\r\nimport Enemy from \"./component/Enemy\";\r\nimport Gun from \"./component/Gun\";\r\nimport Player from \"./component/Player\";\r\nimport View from './View.svelte';\r\nexport default class Game {\r\n    static get state() {\r\n        return Game._state;\r\n    }\r\n    static set state(v) {\r\n        var _a;\r\n        Game._state = v;\r\n        (_a = Game.view) === null || _a === void 0 ? void 0 : _a.reload();\r\n    }\r\n    static get score() {\r\n        return Game._score;\r\n    }\r\n    static set score(v) {\r\n        var _a;\r\n        Game._score = v;\r\n        (_a = Game.view) === null || _a === void 0 ? void 0 : _a.reload();\r\n    }\r\n    static initialize() {\r\n        Domini.start();\r\n        MComponent.registerComponent(\"player\", Player);\r\n        MComponent.registerComponent(\"gun\", Gun);\r\n        MComponent.registerComponent(\"bullet\", Bullet);\r\n        MComponent.registerComponent(\"enemy\", Enemy);\r\n        Game.view = new View({\r\n            target: document.body,\r\n        });\r\n        Player.generate();\r\n        Game.generateSpan = Game._GENERATE_SPAN_DEFAULT;\r\n        Game.generateTime = Game.generateSpan;\r\n        Domini.addRequestAnimationFrame(Game.loop);\r\n    }\r\n    static loop() {\r\n        if (Input.isDown(\"Space\")) {\r\n            if (Game.isStatePlaying == false) {\r\n                Game.toPlayingState();\r\n            }\r\n        }\r\n        const player = Player.instance;\r\n        if (player && Game.isStatePlaying) {\r\n            Game.generateTime += Domini.delta;\r\n            if (Game.generateTime > Game.generateSpan) {\r\n                Enemy.generate();\r\n                Game.generateTime = 0;\r\n                Game.generateSpan = Math.max(Game.generateSpan - 0.2, Gun.SPAN * 0.99);\r\n            }\r\n        }\r\n    }\r\n    static get isStateWaiting() {\r\n        return Game.state == Game._STATE_WAITING;\r\n    }\r\n    static get isStatePlaying() {\r\n        return Game.state == Game._STATE_PLAYING;\r\n    }\r\n    static get isStateEnding() {\r\n        return Game.state == Game._STATE_ENDING;\r\n    }\r\n    static toPlayingState() {\r\n        Enemy.destroyAll();\r\n        if (Player.instance == undefined || Player.instance.entity.isDestroy) {\r\n            Player.generate();\r\n        }\r\n        Game.generateTime = 0;\r\n        Game.state = Game._STATE_PLAYING;\r\n    }\r\n    static toEndingState() {\r\n        Game.state = Game._STATE_ENDING;\r\n    }\r\n}\r\nGame._STATE_WAITING = 0;\r\nGame._STATE_PLAYING = 1;\r\nGame._STATE_ENDING = 2;\r\nGame._GENERATE_SPAN_DEFAULT = 3;\r\nGame.view = undefined;\r\nGame.generateTime = 0;\r\nGame.generateSpan = Game._GENERATE_SPAN_DEFAULT;\r\nGame._state = Game._STATE_WAITING;\r\nGame._score = 0;\r\n","import Game from './app/Game';\r\nGame.initialize();\r\n"],"names":["MComponent","[object Object]","entity","this","isStart","name","nameToComp","get","compClass","set","className","factory","e","entries","Map","Vector2","x","y","v","normalized","multiply","distance","Math","sqrt","pow","pos","va","vb","aFrom","aTo","bFrom","bTo","ta","tb","ElementUtils","ele","children","destoyRecursive","remove","Vertex","HTMLElement","trans","type","node","document","createElement","appendChild","style","position","width","height","TYPE_LT","TYPE_RT","left","TYPE_RB","top","TYPE_LB","positionScreen","bound","getBoundingClientRect","customElements","define","MEntity","super","arguments","vertices","nameToComponent","collides","notCollides","bufferVertexPos","bufferPositionScreen","bufferRadius","body","initializeIfNotYet","calcCollides","list","isDestroy","update","onDestroy","computeBuffer","includes","push","MVertex","new","computeStyle","getComputedStyle","getPropertyValue","rad","sx","sy","w","replace","Number","h","attrs","attributes","attr","comp","delete","getClass","addComponent","start","values","setProperty","r","bg","scale","parentRad","radianScreen","parentSx","scaleScreenX","parentSy","scaleScreenY","origin","addVectors","bottom","right","screenPos","toVector","translateScreen","vec","atan2","degreeScreen","deg","PI","radToDeg","offsetWidth","offsetHeight","cos","sin","radius","getDistance","parentNode","selfVs","subSVs","otherT","otherVs","subOVs","isCollide","isCrossXY","subSV","otherVA","otherVB","otherVC","otherVD","crossAB","cross","crossBC","crossCD","crossDA","subOV","selfVA","selfVB","selfVC","selfVD","targetPos","targetVec","targetRad","baseVec","baseRad","attrName","getAttributeName","getNamedItem","setAttribute","has","isInBody","rect","parentElement","Array","Domini","Input","initialize","loop","currentFrame","now","window","performance","delta","prevDate","loops","requestAnimationFrame","addEventListener","_onKeyDown","_onKeyUp","_onMouseMove","_onMouseDown","_onMouseUp","_onMouseWheel","key","keyToState","keys","state","downFrame","keyToDownFrame","upFrame","keyToUpFrame","wheelFrame","wheel","code","mousePosition","clientX","clientY","button","_MOUSE_LEFT","_MOUSE_MIDDLE","_MOUSE_RIGHT","deltaY","isUpMouseLeft","isNotPressMouseLeft","isDownMouseLeft","isPressingMouseLeft","isUpMouseRight","isNotPressMouseRight","isDownMouseRight","isPressingMouseRight","isUpMouseMiddle","isNotPressMouseMiddle","isDownMouseMiddle","isPressingMouseMiddle","Bullet","generate","vecR","destroy","Gun","interval","SPAN","Player","wScreen","hScreen","instance","gun","d","isPressing","translateScreenY","translateScreenX","loopAtScreen","isOut","enemyAttr","Enemy","some","Game","toEndingState","undefined","clientWidth","clientHeight","random","WIDTH","HEIGHT","hasComponent","player","bulletAttr","bullet","find","score","noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","insert","anchor","insertBefore","detach","removeChild","element","text","data","createTextNode","space","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","pop","callback","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","options","create_fragment","not_equal","props","parent_component","on_destroy","on_disconnect","context","callbacks","skip_bound","ready","ret","rest","value","hydrate","nodes","from","childNodes","l","c","intro","block","local","customElement","m","new_on_destroy","map","filter","mount_component","isStateWaiting","isStatePlaying","wholeText","detaching","destroy_component","$destroy","index","indexOf","splice","$$props","obj","$$set","_state","_a","view","reload","_score","registerComponent","View","generateSpan","_GENERATE_SPAN_DEFAULT","generateTime","addRequestAnimationFrame","isDown","toPlayingState","max","_STATE_WAITING","_STATE_PLAYING","isStateEnding","_STATE_ENDING","destroyAll"],"mappings":"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"}